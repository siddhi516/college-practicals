
#include <graphics.h>
#include <iostream>
#include <math.h>
using namespace std;

// ===================== DDA LINE ======================
void drawDDALine(int x1, int y1, int x2, int y2, int style) {
    int dx = x2 - x1;
    int dy = y2 - y1;
    int steps = abs(dx) > abs(dy) ? abs(dx) : abs(dy);

    float xInc = dx / (float)steps;
    float yInc = dy / (float)steps;

    float x = x1;
    float y = y1;

    for (int i = 0; i <= steps; i++) {
        if (style == 1) {               // Dotted
            if (i % 2 == 0) putpixel(round(x), round(y), WHITE);
        } 
        else if (style == 2) {          // Thick (3-pixel thickness)
            putpixel(round(x), round(y), WHITE);
            putpixel(round(x)+1, round(y), WHITE);
            putpixel(round(x), round(y)+1, WHITE);
        }
        else {
            putpixel(round(x), round(y), WHITE);
        }
        x += xInc;
        y += yInc;
    }
}

// ================== BRESENHAM LINE ===================
void drawBresenhamLine(int x1, int y1, int x2, int y2, int style) {
    int dx = abs(x2 - x1);
    int dy = abs(y2 - y1);
    int sx = (x1 < x2) ? 1 : -1;
    int sy = (y1 < y2) ? 1 : -1;
    int err = dx - dy;

    int count = 0;
    while (true) {
        if (style == 1) {              // Dashed
            if ((count / 5) % 2 == 0)  // 5 pixels on, 5 pixels off
                putpixel(x1, y1, WHITE);
        } 
        else {                         // Solid
            putpixel(x1, y1, WHITE);
        }

        if (x1 == x2 && y1 == y2) break;
        int e2 = 2 * err;
        if (e2 > -dy) { err -= dy; x1 += sx; }
        if (e2 < dx) { err += dx; y1 += sy; }
        count++;
    }
}

// ==================== MAIN ==========================
int main() {
    int gd = DETECT, gm;
    initgraph(&gd, &gm, NULL);

    // ---------- Rectangle using DDA ----------
    // Rectangle 1 (Dotted)
    drawDDALine(100,100, 200,100, 1);
    drawDDALine(200,100, 200,200, 1);
    drawDDALine(200,200, 100,200, 1);
    drawDDALine(100,200, 100,100, 1);

    // Rectangle 2 (Thick)
    drawDDALine(250,100, 350,100, 2);
    drawDDALine(350,100, 350,200, 2);
    drawDDALine(350,200, 250,200, 2);
    drawDDALine(250,200, 250,100, 2);

    // ---------- Diamond using Bresenham ----------
    int cx = 500, cy = 150, size = 70;
    // Solid Diamond
    drawBresenhamLine(cx, cy-size, cx+size, cy, 2);
    drawBresenhamLine(cx+size, cy, cx, cy+size, 2);
    drawBresenhamLine(cx, cy+size, cx-size, cy, 2);
    drawBresenhamLine(cx-size, cy, cx, cy-size, 2);

    // Dashed Diamond (below the solid one)
    int cy2 = 300;
    drawBresenhamLine(cx, cy2-size, cx+size, cy2, 1);
    drawBresenhamLine(cx+size, cy2, cx, cy2+size, 1);
    drawBresenhamLine(cx, cy2+size, cx-size, cy2, 1);
    drawBresenhamLine(cx-size, cy2, cx, cy2-size, 1);

    getch();
    closegraph();
    return 0;
}
